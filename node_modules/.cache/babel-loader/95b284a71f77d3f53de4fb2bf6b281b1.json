{"ast":null,"code":"import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n  constructor() {\n    this.enable = false;\n    this.length = 10;\n    this.fill = new MoveTrailFill();\n  }\n\n  get fillColor() {\n    return this.fill.color;\n  }\n\n  set fillColor(value) {\n    this.fill.load({\n      color: value\n    });\n  }\n\n  load(data) {\n    if (!data) {\n      return;\n    }\n\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n\n    if (data.fill !== undefined || data.fillColor !== undefined) {\n      this.fill.load(data.fill || {\n        color: data.fillColor\n      });\n    }\n\n    if (data.length !== undefined) {\n      this.length = data.length;\n    }\n  }\n\n}","map":{"version":3,"sources":["D:/mitsukimiyagi-portfolio/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js"],"names":["MoveTrailFill","MoveTrail","constructor","enable","length","fill","fillColor","color","value","load","data","undefined"],"mappings":"AAAA,SAASA,aAAT,QAA8B,iBAA9B;AACA,OAAO,MAAMC,SAAN,CAAgB;AACnBC,EAAAA,WAAW,GAAG;AACV,SAAKC,MAAL,GAAc,KAAd;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,IAAL,GAAY,IAAIL,aAAJ,EAAZ;AACH;;AACY,MAATM,SAAS,GAAG;AACZ,WAAO,KAAKD,IAAL,CAAUE,KAAjB;AACH;;AACY,MAATD,SAAS,CAACE,KAAD,EAAQ;AACjB,SAAKH,IAAL,CAAUI,IAAV,CAAe;AAAEF,MAAAA,KAAK,EAAEC;AAAT,KAAf;AACH;;AACDC,EAAAA,IAAI,CAACC,IAAD,EAAO;AACP,QAAI,CAACA,IAAL,EAAW;AACP;AACH;;AACD,QAAIA,IAAI,CAACP,MAAL,KAAgBQ,SAApB,EAA+B;AAC3B,WAAKR,MAAL,GAAcO,IAAI,CAACP,MAAnB;AACH;;AACD,QAAIO,IAAI,CAACL,IAAL,KAAcM,SAAd,IAA2BD,IAAI,CAACJ,SAAL,KAAmBK,SAAlD,EAA6D;AACzD,WAAKN,IAAL,CAAUI,IAAV,CAAeC,IAAI,CAACL,IAAL,IAAa;AAAEE,QAAAA,KAAK,EAAEG,IAAI,CAACJ;AAAd,OAA5B;AACH;;AACD,QAAII,IAAI,CAACN,MAAL,KAAgBO,SAApB,EAA+B;AAC3B,WAAKP,MAAL,GAAcM,IAAI,CAACN,MAAnB;AACH;AACJ;;AAzBkB","sourcesContent":["import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}