{"ast":null,"code":"import { CanonicalizeLocaleList } from './abstract/CanonicalizeLocaleList';\nimport { ResolveLocale } from './abstract/ResolveLocale';\nexport function match(requestedLocales, availableLocales, defaultLocale, opts) {\n  var locales = availableLocales.reduce(function (all, l) {\n    all.add(l);\n    return all;\n  }, new Set());\n  return ResolveLocale(locales, CanonicalizeLocaleList(requestedLocales), {\n    localeMatcher: (opts === null || opts === void 0 ? void 0 : opts.algorithm) || 'best fit'\n  }, [], {}, function () {\n    return defaultLocale;\n  }).locale;\n}\nexport { LookupSupportedLocales } from './abstract/LookupSupportedLocales';\nexport { ResolveLocale } from './abstract/ResolveLocale';","map":{"version":3,"sources":["D:/mitsukimiyagi-portfolio/node_modules/@formatjs/intl-localematcher/lib/index.js"],"names":["CanonicalizeLocaleList","ResolveLocale","match","requestedLocales","availableLocales","defaultLocale","opts","locales","reduce","all","l","add","Set","localeMatcher","algorithm","locale","LookupSupportedLocales"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,mCAAvC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAO,SAASC,KAAT,CAAeC,gBAAf,EAAiCC,gBAAjC,EAAmDC,aAAnD,EAAkEC,IAAlE,EAAwE;AAC3E,MAAIC,OAAO,GAAGH,gBAAgB,CAACI,MAAjB,CAAwB,UAAUC,GAAV,EAAeC,CAAf,EAAkB;AACpDD,IAAAA,GAAG,CAACE,GAAJ,CAAQD,CAAR;AACA,WAAOD,GAAP;AACH,GAHa,EAGX,IAAIG,GAAJ,EAHW,CAAd;AAIA,SAAOX,aAAa,CAACM,OAAD,EAAUP,sBAAsB,CAACG,gBAAD,CAAhC,EAAoD;AACpEU,IAAAA,aAAa,EAAE,CAACP,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACQ,SAAlD,KAAgE;AADX,GAApD,EAEjB,EAFiB,EAEb,EAFa,EAET,YAAY;AAAE,WAAOT,aAAP;AAAuB,GAF5B,CAAb,CAE2CU,MAFlD;AAGH;AACD,SAASC,sBAAT,QAAuC,mCAAvC;AACA,SAASf,aAAT,QAA8B,0BAA9B","sourcesContent":["import { CanonicalizeLocaleList } from './abstract/CanonicalizeLocaleList';\nimport { ResolveLocale } from './abstract/ResolveLocale';\nexport function match(requestedLocales, availableLocales, defaultLocale, opts) {\n    var locales = availableLocales.reduce(function (all, l) {\n        all.add(l);\n        return all;\n    }, new Set());\n    return ResolveLocale(locales, CanonicalizeLocaleList(requestedLocales), {\n        localeMatcher: (opts === null || opts === void 0 ? void 0 : opts.algorithm) || 'best fit',\n    }, [], {}, function () { return defaultLocale; }).locale;\n}\nexport { LookupSupportedLocales } from './abstract/LookupSupportedLocales';\nexport { ResolveLocale } from './abstract/ResolveLocale';\n"]},"metadata":{},"sourceType":"module"}