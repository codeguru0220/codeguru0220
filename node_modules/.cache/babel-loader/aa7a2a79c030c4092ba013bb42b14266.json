{"ast":null,"code":"import { ExternalInteractorBase, getDistance, isInArray } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n\n  clear(particle, delta, force) {\n    if (particle.slow.inRange && !force) {\n      return;\n    }\n\n    particle.slow.factor = 1;\n  }\n\n  init() {\n    const container = this.container,\n          slow = container.actualOptions.interactivity.modes.slow;\n\n    if (!slow) {\n      return;\n    }\n\n    container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n  }\n\n  async interact() {}\n\n  isEnabled(particle) {\n    const container = this.container,\n          mouse = container.interactivity.mouse,\n          events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n    return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n  }\n\n  loadModeOptions(options) {\n    if (!options.slow) {\n      options.slow = new Slow();\n    }\n\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n\n    for (const source of sources) {\n      options.slow.load(source?.slow);\n    }\n  }\n\n  reset(particle) {\n    particle.slow.inRange = false;\n    const container = this.container,\n          options = container.actualOptions,\n          mousePos = container.interactivity.mouse.position,\n          radius = container.retina.slowModeRadius,\n          slowOptions = options.interactivity.modes.slow;\n\n    if (!slowOptions || !radius || radius < 0 || !mousePos) {\n      return;\n    }\n\n    const particlePos = particle.getPosition(),\n          dist = getDistance(mousePos, particlePos),\n          proximityFactor = dist / radius,\n          slowFactor = slowOptions.factor,\n          {\n      slow\n    } = particle;\n\n    if (dist > radius) {\n      return;\n    }\n\n    slow.inRange = true;\n    slow.factor = proximityFactor / slowFactor;\n  }\n\n}","map":{"version":3,"sources":["D:/mitsukimiyagi-portfolio/node_modules/tsparticles-interaction-external-slow/esm/Slower.js"],"names":["ExternalInteractorBase","getDistance","isInArray","Slow","Slower","constructor","container","clear","particle","delta","force","slow","inRange","factor","init","actualOptions","interactivity","modes","retina","slowModeRadius","radius","pixelRatio","interact","isEnabled","mouse","events","onHover","enable","position","mode","loadModeOptions","options","sources","source","load","reset","mousePos","slowOptions","particlePos","getPosition","dist","proximityFactor","slowFactor"],"mappings":"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","sourcesContent":["import { ExternalInteractorBase, getDistance, isInArray, } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}