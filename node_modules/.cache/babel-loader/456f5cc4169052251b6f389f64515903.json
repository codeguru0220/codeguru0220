{"ast":null,"code":"const isObject = val => typeof val === \"object\" && val !== null;\n\nexport function deepCompare(obj1, obj2) {\n  let excludeKeyFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : () => false;\n\n  if (!isObject(obj1) || !isObject(obj2)) {\n    return obj1 === obj2;\n  }\n\n  const keys1 = Object.keys(obj1).filter(key => !excludeKeyFn(key)),\n        keys2 = Object.keys(obj2).filter(key => !excludeKeyFn(key));\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const value1 = obj1[key],\n          value2 = obj2[key];\n\n    if (isObject(value1) && isObject(value2)) {\n      if (value1 === obj2 && value2 === obj1) {\n        continue;\n      }\n\n      if (!deepCompare(value1, value2, excludeKeyFn)) {\n        return false;\n      }\n    } else if (Array.isArray(value1) && Array.isArray(value2)) {\n      if (!deepCompareArrays(value1, value2, excludeKeyFn)) {\n        return false;\n      }\n    } else if (value1 !== value2) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction deepCompareArrays(arr1, arr2, excludeKeyFn) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let i = 0; i < arr1.length; i++) {\n    const val1 = arr1[i],\n          val2 = arr2[i];\n\n    if (Array.isArray(val1) && Array.isArray(val2)) {\n      if (!deepCompareArrays(val1, val2, excludeKeyFn)) {\n        return false;\n      }\n    } else if (isObject(val1) && isObject(val2)) {\n      if (!deepCompare(val1, val2, excludeKeyFn)) {\n        return false;\n      }\n    } else if (val1 !== val2) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["D:/mitsukimiyagi-portfolio/node_modules/react-tsparticles/esm/Utils.js"],"names":["isObject","val","deepCompare","obj1","obj2","excludeKeyFn","keys1","Object","keys","filter","key","keys2","length","value1","value2","Array","isArray","deepCompareArrays","arr1","arr2","i","val1","val2"],"mappings":"AAAA,MAAMA,QAAQ,GAAIC,GAAD,IAAS,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAA7D;;AACA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,IAA3B,EAA6D;AAAA,MAA5BC,YAA4B,uEAAb,MAAM,KAAO;;AAChE,MAAI,CAACL,QAAQ,CAACG,IAAD,CAAT,IAAmB,CAACH,QAAQ,CAACI,IAAD,CAAhC,EAAwC;AACpC,WAAOD,IAAI,KAAKC,IAAhB;AACH;;AACD,QAAME,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYL,IAAZ,EAAkBM,MAAlB,CAAyBC,GAAG,IAAI,CAACL,YAAY,CAACK,GAAD,CAA7C,CAAd;AAAA,QAAmEC,KAAK,GAAGJ,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,MAAlB,CAAyBC,GAAG,IAAI,CAACL,YAAY,CAACK,GAAD,CAA7C,CAA3E;;AACA,MAAIJ,KAAK,CAACM,MAAN,KAAiBD,KAAK,CAACC,MAA3B,EAAmC;AAC/B,WAAO,KAAP;AACH;;AACD,OAAK,MAAMF,GAAX,IAAkBJ,KAAlB,EAAyB;AACrB,UAAMO,MAAM,GAAGV,IAAI,CAACO,GAAD,CAAnB;AAAA,UAA0BI,MAAM,GAAGV,IAAI,CAACM,GAAD,CAAvC;;AACA,QAAIV,QAAQ,CAACa,MAAD,CAAR,IAAoBb,QAAQ,CAACc,MAAD,CAAhC,EAA0C;AACtC,UAAID,MAAM,KAAKT,IAAX,IAAmBU,MAAM,KAAKX,IAAlC,EAAwC;AACpC;AACH;;AACD,UAAI,CAACD,WAAW,CAACW,MAAD,EAASC,MAAT,EAAiBT,YAAjB,CAAhB,EAAgD;AAC5C,eAAO,KAAP;AACH;AACJ,KAPD,MAQK,IAAIU,KAAK,CAACC,OAAN,CAAcH,MAAd,KAAyBE,KAAK,CAACC,OAAN,CAAcF,MAAd,CAA7B,EAAoD;AACrD,UAAI,CAACG,iBAAiB,CAACJ,MAAD,EAASC,MAAT,EAAiBT,YAAjB,CAAtB,EAAsD;AAClD,eAAO,KAAP;AACH;AACJ,KAJI,MAKA,IAAIQ,MAAM,KAAKC,MAAf,EAAuB;AACxB,aAAO,KAAP;AACH;AACJ;;AACD,SAAO,IAAP;AACH;;AACD,SAASG,iBAAT,CAA2BC,IAA3B,EAAiCC,IAAjC,EAAuCd,YAAvC,EAAqD;AACjD,MAAIa,IAAI,CAACN,MAAL,KAAgBO,IAAI,CAACP,MAAzB,EAAiC;AAC7B,WAAO,KAAP;AACH;;AACD,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACN,MAAzB,EAAiCQ,CAAC,EAAlC,EAAsC;AAClC,UAAMC,IAAI,GAAGH,IAAI,CAACE,CAAD,CAAjB;AAAA,UAAsBE,IAAI,GAAGH,IAAI,CAACC,CAAD,CAAjC;;AACA,QAAIL,KAAK,CAACC,OAAN,CAAcK,IAAd,KAAuBN,KAAK,CAACC,OAAN,CAAcM,IAAd,CAA3B,EAAgD;AAC5C,UAAI,CAACL,iBAAiB,CAACI,IAAD,EAAOC,IAAP,EAAajB,YAAb,CAAtB,EAAkD;AAC9C,eAAO,KAAP;AACH;AACJ,KAJD,MAKK,IAAIL,QAAQ,CAACqB,IAAD,CAAR,IAAkBrB,QAAQ,CAACsB,IAAD,CAA9B,EAAsC;AACvC,UAAI,CAACpB,WAAW,CAACmB,IAAD,EAAOC,IAAP,EAAajB,YAAb,CAAhB,EAA4C;AACxC,eAAO,KAAP;AACH;AACJ,KAJI,MAKA,IAAIgB,IAAI,KAAKC,IAAb,EAAmB;AACpB,aAAO,KAAP;AACH;AACJ;;AACD,SAAO,IAAP;AACH","sourcesContent":["const isObject = (val) => typeof val === \"object\" && val !== null;\nexport function deepCompare(obj1, obj2, excludeKeyFn = () => false) {\n    if (!isObject(obj1) || !isObject(obj2)) {\n        return obj1 === obj2;\n    }\n    const keys1 = Object.keys(obj1).filter(key => !excludeKeyFn(key)), keys2 = Object.keys(obj2).filter(key => !excludeKeyFn(key));\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const value1 = obj1[key], value2 = obj2[key];\n        if (isObject(value1) && isObject(value2)) {\n            if (value1 === obj2 && value2 === obj1) {\n                continue;\n            }\n            if (!deepCompare(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (Array.isArray(value1) && Array.isArray(value2)) {\n            if (!deepCompareArrays(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (value1 !== value2) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction deepCompareArrays(arr1, arr2, excludeKeyFn) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const val1 = arr1[i], val2 = arr2[i];\n        if (Array.isArray(val1) && Array.isArray(val2)) {\n            if (!deepCompareArrays(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (isObject(val1) && isObject(val2)) {\n            if (!deepCompare(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (val1 !== val2) {\n            return false;\n        }\n    }\n    return true;\n}\n"]},"metadata":{},"sourceType":"module"}