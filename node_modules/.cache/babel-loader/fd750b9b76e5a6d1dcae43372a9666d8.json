{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\r\n * Tell the browser that the event listener won't prevent a scroll.\r\n * Allowing the browser to continue scrolling without having to\r\n * to wait for the listener to return.\r\n */\n\nvar addPassiveEventListener = exports.addPassiveEventListener = function addPassiveEventListener(target, eventName, listener) {\n  var listenerName = listener.name;\n\n  if (!listenerName) {\n    listenerName = eventName;\n    console.warn('Listener must be a named function.');\n  }\n\n  if (!attachedListeners.has(eventName)) attachedListeners.set(eventName, new Set());\n  var listeners = attachedListeners.get(eventName);\n  if (listeners.has(listenerName)) return;\n\n  var supportsPassiveOption = function () {\n    var supportsPassiveOption = false;\n\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          supportsPassiveOption = true;\n        }\n      });\n      window.addEventListener('test', null, opts);\n    } catch (e) {}\n\n    return supportsPassiveOption;\n  }();\n\n  target.addEventListener(eventName, listener, supportsPassiveOption ? {\n    passive: true\n  } : false);\n  listeners.add(listenerName);\n};\n\nvar removePassiveEventListener = exports.removePassiveEventListener = function removePassiveEventListener(target, eventName, listener) {\n  target.removeEventListener(eventName, listener);\n  attachedListeners.get(eventName).delete(listener.name || eventName);\n};\n\nvar attachedListeners = new Map();","map":{"version":3,"sources":["D:/mitsukimiyagi-portfolio/node_modules/react-scroll/modules/mixins/passive-event-listeners.js"],"names":["Object","defineProperty","exports","value","addPassiveEventListener","target","eventName","listener","listenerName","name","console","warn","attachedListeners","has","set","Set","listeners","get","supportsPassiveOption","opts","window","addEventListener","e","passive","add","removePassiveEventListener","removeEventListener","delete","Map"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGA;AACA;AACA;AACA;AACA;;AACA,IAAIC,uBAAuB,GAAGF,OAAO,CAACE,uBAAR,GAAkC,SAASA,uBAAT,CAAiCC,MAAjC,EAAyCC,SAAzC,EAAoDC,QAApD,EAA8D;AAC5H,MAAIC,YAAY,GAAGD,QAAQ,CAACE,IAA5B;;AACA,MAAI,CAACD,YAAL,EAAmB;AACjBA,IAAAA,YAAY,GAAGF,SAAf;AACAI,IAAAA,OAAO,CAACC,IAAR,CAAa,oCAAb;AACD;;AAED,MAAI,CAACC,iBAAiB,CAACC,GAAlB,CAAsBP,SAAtB,CAAL,EAAuCM,iBAAiB,CAACE,GAAlB,CAAsBR,SAAtB,EAAiC,IAAIS,GAAJ,EAAjC;AACvC,MAAIC,SAAS,GAAGJ,iBAAiB,CAACK,GAAlB,CAAsBX,SAAtB,CAAhB;AACA,MAAIU,SAAS,CAACH,GAAV,CAAcL,YAAd,CAAJ,EAAiC;;AAEjC,MAAIU,qBAAqB,GAAG,YAAY;AACtC,QAAIA,qBAAqB,GAAG,KAA5B;;AACA,QAAI;AACF,UAAIC,IAAI,GAAGnB,MAAM,CAACC,cAAP,CAAsB,EAAtB,EAA0B,SAA1B,EAAqC;AAC9CgB,QAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClBC,UAAAA,qBAAqB,GAAG,IAAxB;AACD;AAH6C,OAArC,CAAX;AAKAE,MAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,IAAhC,EAAsCF,IAAtC;AACD,KAPD,CAOE,OAAOG,CAAP,EAAU,CAAE;;AACd,WAAOJ,qBAAP;AACD,GAX2B,EAA5B;;AAYAb,EAAAA,MAAM,CAACgB,gBAAP,CAAwBf,SAAxB,EAAmCC,QAAnC,EAA6CW,qBAAqB,GAAG;AAAEK,IAAAA,OAAO,EAAE;AAAX,GAAH,GAAuB,KAAzF;AACAP,EAAAA,SAAS,CAACQ,GAAV,CAAchB,YAAd;AACD,CAzBD;;AA2BA,IAAIiB,0BAA0B,GAAGvB,OAAO,CAACuB,0BAAR,GAAqC,SAASA,0BAAT,CAAoCpB,MAApC,EAA4CC,SAA5C,EAAuDC,QAAvD,EAAiE;AACrIF,EAAAA,MAAM,CAACqB,mBAAP,CAA2BpB,SAA3B,EAAsCC,QAAtC;AACAK,EAAAA,iBAAiB,CAACK,GAAlB,CAAsBX,SAAtB,EAAiCqB,MAAjC,CAAwCpB,QAAQ,CAACE,IAAT,IAAiBH,SAAzD;AACD,CAHD;;AAKA,IAAIM,iBAAiB,GAAG,IAAIgB,GAAJ,EAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\r\n * Tell the browser that the event listener won't prevent a scroll.\r\n * Allowing the browser to continue scrolling without having to\r\n * to wait for the listener to return.\r\n */\nvar addPassiveEventListener = exports.addPassiveEventListener = function addPassiveEventListener(target, eventName, listener) {\n  var listenerName = listener.name;\n  if (!listenerName) {\n    listenerName = eventName;\n    console.warn('Listener must be a named function.');\n  }\n\n  if (!attachedListeners.has(eventName)) attachedListeners.set(eventName, new Set());\n  var listeners = attachedListeners.get(eventName);\n  if (listeners.has(listenerName)) return;\n\n  var supportsPassiveOption = function () {\n    var supportsPassiveOption = false;\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          supportsPassiveOption = true;\n        }\n      });\n      window.addEventListener('test', null, opts);\n    } catch (e) {}\n    return supportsPassiveOption;\n  }();\n  target.addEventListener(eventName, listener, supportsPassiveOption ? { passive: true } : false);\n  listeners.add(listenerName);\n};\n\nvar removePassiveEventListener = exports.removePassiveEventListener = function removePassiveEventListener(target, eventName, listener) {\n  target.removeEventListener(eventName, listener);\n  attachedListeners.get(eventName).delete(listener.name || eventName);\n};\n\nvar attachedListeners = new Map();"]},"metadata":{},"sourceType":"script"}