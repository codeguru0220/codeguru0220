{"ast":null,"code":"import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n  constructor() {\n    this.onClick = new ClickEvent();\n    this.onDiv = new DivEvent();\n    this.onHover = new HoverEvent();\n    this.resize = new ResizeEvent();\n  }\n\n  get onclick() {\n    return this.onClick;\n  }\n\n  set onclick(value) {\n    this.onClick = value;\n  }\n\n  get ondiv() {\n    return this.onDiv;\n  }\n\n  set ondiv(value) {\n    this.onDiv = value;\n  }\n\n  get onhover() {\n    return this.onHover;\n  }\n\n  set onhover(value) {\n    this.onHover = value;\n  }\n\n  load(data) {\n    if (!data) {\n      return;\n    }\n\n    this.onClick.load(data.onClick ?? data.onclick);\n    const onDiv = data.onDiv ?? data.ondiv;\n\n    if (onDiv !== undefined) {\n      this.onDiv = executeOnSingleOrMultiple(onDiv, t => {\n        const tmp = new DivEvent();\n        tmp.load(t);\n        return tmp;\n      });\n    }\n\n    this.onHover.load(data.onHover ?? data.onhover);\n\n    if (isBoolean(data.resize)) {\n      this.resize.enable = data.resize;\n    } else {\n      this.resize.load(data.resize);\n    }\n  }\n\n}","map":{"version":3,"sources":["D:/mitsukimiyagi-portfolio/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js"],"names":["executeOnSingleOrMultiple","isBoolean","ClickEvent","DivEvent","HoverEvent","ResizeEvent","Events","constructor","onClick","onDiv","onHover","resize","onclick","value","ondiv","onhover","load","data","undefined","t","tmp","enable"],"mappings":"AAAA,SAASA,yBAAT,EAAoCC,SAApC,QAAqD,yBAArD;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,MAAMC,MAAN,CAAa;AAChBC,EAAAA,WAAW,GAAG;AACV,SAAKC,OAAL,GAAe,IAAIN,UAAJ,EAAf;AACA,SAAKO,KAAL,GAAa,IAAIN,QAAJ,EAAb;AACA,SAAKO,OAAL,GAAe,IAAIN,UAAJ,EAAf;AACA,SAAKO,MAAL,GAAc,IAAIN,WAAJ,EAAd;AACH;;AACU,MAAPO,OAAO,GAAG;AACV,WAAO,KAAKJ,OAAZ;AACH;;AACU,MAAPI,OAAO,CAACC,KAAD,EAAQ;AACf,SAAKL,OAAL,GAAeK,KAAf;AACH;;AACQ,MAALC,KAAK,GAAG;AACR,WAAO,KAAKL,KAAZ;AACH;;AACQ,MAALK,KAAK,CAACD,KAAD,EAAQ;AACb,SAAKJ,KAAL,GAAaI,KAAb;AACH;;AACU,MAAPE,OAAO,GAAG;AACV,WAAO,KAAKL,OAAZ;AACH;;AACU,MAAPK,OAAO,CAACF,KAAD,EAAQ;AACf,SAAKH,OAAL,GAAeG,KAAf;AACH;;AACDG,EAAAA,IAAI,CAACC,IAAD,EAAO;AACP,QAAI,CAACA,IAAL,EAAW;AACP;AACH;;AACD,SAAKT,OAAL,CAAaQ,IAAb,CAAkBC,IAAI,CAACT,OAAL,IAAgBS,IAAI,CAACL,OAAvC;AACA,UAAMH,KAAK,GAAGQ,IAAI,CAACR,KAAL,IAAcQ,IAAI,CAACH,KAAjC;;AACA,QAAIL,KAAK,KAAKS,SAAd,EAAyB;AACrB,WAAKT,KAAL,GAAaT,yBAAyB,CAACS,KAAD,EAASU,CAAD,IAAO;AACjD,cAAMC,GAAG,GAAG,IAAIjB,QAAJ,EAAZ;AACAiB,QAAAA,GAAG,CAACJ,IAAJ,CAASG,CAAT;AACA,eAAOC,GAAP;AACH,OAJqC,CAAtC;AAKH;;AACD,SAAKV,OAAL,CAAaM,IAAb,CAAkBC,IAAI,CAACP,OAAL,IAAgBO,IAAI,CAACF,OAAvC;;AACA,QAAId,SAAS,CAACgB,IAAI,CAACN,MAAN,CAAb,EAA4B;AACxB,WAAKA,MAAL,CAAYU,MAAZ,GAAqBJ,IAAI,CAACN,MAA1B;AACH,KAFD,MAGK;AACD,WAAKA,MAAL,CAAYK,IAAZ,CAAiBC,IAAI,CAACN,MAAtB;AACH;AACJ;;AA7Ce","sourcesContent":["import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick ?? data.onclick);\n        const onDiv = data.onDiv ?? data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover ?? data.onhover);\n        if (isBoolean(data.resize)) {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}