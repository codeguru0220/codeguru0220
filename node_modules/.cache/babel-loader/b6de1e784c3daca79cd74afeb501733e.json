{"ast":null,"code":"import { getRandom } from \"tsparticles-engine\";\n\nfunction randomSquareCoordinate(position, offset) {\n  return position + offset * (getRandom() - 0.5);\n}\n\nexport class SquareShape {\n  randomPosition(position, size, fill) {\n    if (fill) {\n      return {\n        x: randomSquareCoordinate(position.x, size.width),\n        y: randomSquareCoordinate(position.y, size.height)\n      };\n    } else {\n      const halfW = size.width / 2,\n            halfH = size.height / 2,\n            side = Math.floor(getRandom() * 4),\n            v = (getRandom() - 0.5) * 2;\n\n      switch (side) {\n        case 0:\n          return {\n            x: position.x + v * halfW,\n            y: position.y - halfH\n          };\n\n        case 1:\n          return {\n            x: position.x - halfW,\n            y: position.y + v * halfH\n          };\n\n        case 2:\n          return {\n            x: position.x + v * halfW,\n            y: position.y + halfH\n          };\n\n        case 3:\n        default:\n          return {\n            x: position.x + halfW,\n            y: position.y + v * halfH\n          };\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["D:/mitsukimiyagi-portfolio/node_modules/tsparticles-plugin-emitters/esm/Shapes/Square/SquareShape.js"],"names":["getRandom","randomSquareCoordinate","position","offset","SquareShape","randomPosition","size","fill","x","width","y","height","halfW","halfH","side","Math","floor","v"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;;AACA,SAASC,sBAAT,CAAgCC,QAAhC,EAA0CC,MAA1C,EAAkD;AAC9C,SAAOD,QAAQ,GAAGC,MAAM,IAAIH,SAAS,KAAK,GAAlB,CAAxB;AACH;;AACD,OAAO,MAAMI,WAAN,CAAkB;AACrBC,EAAAA,cAAc,CAACH,QAAD,EAAWI,IAAX,EAAiBC,IAAjB,EAAuB;AACjC,QAAIA,IAAJ,EAAU;AACN,aAAO;AACHC,QAAAA,CAAC,EAAEP,sBAAsB,CAACC,QAAQ,CAACM,CAAV,EAAaF,IAAI,CAACG,KAAlB,CADtB;AAEHC,QAAAA,CAAC,EAAET,sBAAsB,CAACC,QAAQ,CAACQ,CAAV,EAAaJ,IAAI,CAACK,MAAlB;AAFtB,OAAP;AAIH,KALD,MAMK;AACD,YAAMC,KAAK,GAAGN,IAAI,CAACG,KAAL,GAAa,CAA3B;AAAA,YAA8BI,KAAK,GAAGP,IAAI,CAACK,MAAL,GAAc,CAApD;AAAA,YAAuDG,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWhB,SAAS,KAAK,CAAzB,CAA9D;AAAA,YAA2FiB,CAAC,GAAG,CAACjB,SAAS,KAAK,GAAf,IAAsB,CAArH;;AACA,cAAQc,IAAR;AACI,aAAK,CAAL;AACI,iBAAO;AACHN,YAAAA,CAAC,EAAEN,QAAQ,CAACM,CAAT,GAAaS,CAAC,GAAGL,KADjB;AAEHF,YAAAA,CAAC,EAAER,QAAQ,CAACQ,CAAT,GAAaG;AAFb,WAAP;;AAIJ,aAAK,CAAL;AACI,iBAAO;AACHL,YAAAA,CAAC,EAAEN,QAAQ,CAACM,CAAT,GAAaI,KADb;AAEHF,YAAAA,CAAC,EAAER,QAAQ,CAACQ,CAAT,GAAaO,CAAC,GAAGJ;AAFjB,WAAP;;AAIJ,aAAK,CAAL;AACI,iBAAO;AACHL,YAAAA,CAAC,EAAEN,QAAQ,CAACM,CAAT,GAAaS,CAAC,GAAGL,KADjB;AAEHF,YAAAA,CAAC,EAAER,QAAQ,CAACQ,CAAT,GAAaG;AAFb,WAAP;;AAIJ,aAAK,CAAL;AACA;AACI,iBAAO;AACHL,YAAAA,CAAC,EAAEN,QAAQ,CAACM,CAAT,GAAaI,KADb;AAEHF,YAAAA,CAAC,EAAER,QAAQ,CAACQ,CAAT,GAAaO,CAAC,GAAGJ;AAFjB,WAAP;AAlBR;AAuBH;AACJ;;AAlCoB","sourcesContent":["import { getRandom } from \"tsparticles-engine\";\nfunction randomSquareCoordinate(position, offset) {\n    return position + offset * (getRandom() - 0.5);\n}\nexport class SquareShape {\n    randomPosition(position, size, fill) {\n        if (fill) {\n            return {\n                x: randomSquareCoordinate(position.x, size.width),\n                y: randomSquareCoordinate(position.y, size.height),\n            };\n        }\n        else {\n            const halfW = size.width / 2, halfH = size.height / 2, side = Math.floor(getRandom() * 4), v = (getRandom() - 0.5) * 2;\n            switch (side) {\n                case 0:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y - halfH,\n                    };\n                case 1:\n                    return {\n                        x: position.x - halfW,\n                        y: position.y + v * halfH,\n                    };\n                case 2:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y + halfH,\n                    };\n                case 3:\n                default:\n                    return {\n                        x: position.x + halfW,\n                        y: position.y + v * halfH,\n                    };\n            }\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}