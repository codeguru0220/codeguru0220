{"ast":null,"code":"import { ExternalInteractorBase, isInArray } from \"tsparticles-engine\";\nimport { Trail } from \"./Options/Classes/Trail\";\nexport class TrailMaker extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n    this._delay = 0;\n  }\n\n  clear() {}\n\n  init() {}\n\n  async interact(delta) {\n    const container = this.container,\n          {\n      interactivity\n    } = container;\n\n    if (!container.retina.reduceFactor) {\n      return;\n    }\n\n    const options = container.actualOptions,\n          trailOptions = options.interactivity.modes.trail;\n\n    if (!trailOptions) {\n      return;\n    }\n\n    const optDelay = trailOptions.delay * 1000 / this.container.retina.reduceFactor;\n\n    if (this._delay < optDelay) {\n      this._delay += delta.value;\n    }\n\n    if (this._delay < optDelay) {\n      return;\n    }\n\n    const canEmit = !(trailOptions.pauseOnStop && (interactivity.mouse.position === this._lastPosition || interactivity.mouse.position?.x === this._lastPosition?.x && interactivity.mouse.position?.y === this._lastPosition?.y));\n    const mousePos = container.interactivity.mouse.position;\n\n    if (mousePos) {\n      this._lastPosition = { ...mousePos\n      };\n    } else {\n      delete this._lastPosition;\n    }\n\n    if (canEmit) {\n      container.particles.push(trailOptions.quantity, container.interactivity.mouse, trailOptions.particles);\n    }\n\n    this._delay -= optDelay;\n  }\n\n  isEnabled(particle) {\n    const container = this.container,\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse,\n          events = (particle?.interactivity ?? options.interactivity).events;\n    return mouse.clicking && mouse.inside && !!mouse.position && isInArray(\"trail\", events.onClick.mode) || mouse.inside && !!mouse.position && isInArray(\"trail\", events.onHover.mode);\n  }\n\n  loadModeOptions(options) {\n    if (!options.trail) {\n      options.trail = new Trail();\n    }\n\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n\n    for (const source of sources) {\n      options.trail.load(source?.trail);\n    }\n  }\n\n  reset() {}\n\n}","map":{"version":3,"sources":["D:/mitsukimiyagi-portfolio/node_modules/tsparticles-interaction-external-trail/esm/TrailMaker.js"],"names":["ExternalInteractorBase","isInArray","Trail","TrailMaker","constructor","container","_delay","clear","init","interact","delta","interactivity","retina","reduceFactor","options","actualOptions","trailOptions","modes","trail","optDelay","delay","value","canEmit","pauseOnStop","mouse","position","_lastPosition","x","y","mousePos","particles","push","quantity","isEnabled","particle","events","clicking","inside","onClick","mode","onHover","loadModeOptions","sources","source","load","reset"],"mappings":"AAAA,SAASA,sBAAT,EAAiCC,SAAjC,QAAmD,oBAAnD;AACA,SAASC,KAAT,QAAsB,yBAAtB;AACA,OAAO,MAAMC,UAAN,SAAyBH,sBAAzB,CAAgD;AACnDI,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,UAAMA,SAAN;AACA,SAAKC,MAAL,GAAc,CAAd;AACH;;AACDC,EAAAA,KAAK,GAAG,CACP;;AACDC,EAAAA,IAAI,GAAG,CACN;;AACa,QAARC,QAAQ,CAACC,KAAD,EAAQ;AAClB,UAAML,SAAS,GAAG,KAAKA,SAAvB;AAAA,UAAkC;AAAEM,MAAAA;AAAF,QAAoBN,SAAtD;;AACA,QAAI,CAACA,SAAS,CAACO,MAAV,CAAiBC,YAAtB,EAAoC;AAChC;AACH;;AACD,UAAMC,OAAO,GAAGT,SAAS,CAACU,aAA1B;AAAA,UAAyCC,YAAY,GAAGF,OAAO,CAACH,aAAR,CAAsBM,KAAtB,CAA4BC,KAApF;;AACA,QAAI,CAACF,YAAL,EAAmB;AACf;AACH;;AACD,UAAMG,QAAQ,GAAIH,YAAY,CAACI,KAAb,GAAqB,IAAtB,GAA8B,KAAKf,SAAL,CAAeO,MAAf,CAAsBC,YAArE;;AACA,QAAI,KAAKP,MAAL,GAAca,QAAlB,EAA4B;AACxB,WAAKb,MAAL,IAAeI,KAAK,CAACW,KAArB;AACH;;AACD,QAAI,KAAKf,MAAL,GAAca,QAAlB,EAA4B;AACxB;AACH;;AACD,UAAMG,OAAO,GAAG,EAAEN,YAAY,CAACO,WAAb,KACbZ,aAAa,CAACa,KAAd,CAAoBC,QAApB,KAAiC,KAAKC,aAAtC,IACIf,aAAa,CAACa,KAAd,CAAoBC,QAApB,EAA8BE,CAA9B,KAAoC,KAAKD,aAAL,EAAoBC,CAAxD,IACGhB,aAAa,CAACa,KAAd,CAAoBC,QAApB,EAA8BG,CAA9B,KAAoC,KAAKF,aAAL,EAAoBE,CAHlD,CAAF,CAAhB;AAIA,UAAMC,QAAQ,GAAGxB,SAAS,CAACM,aAAV,CAAwBa,KAAxB,CAA8BC,QAA/C;;AACA,QAAII,QAAJ,EAAc;AACV,WAAKH,aAAL,GAAqB,EAAE,GAAGG;AAAL,OAArB;AACH,KAFD,MAGK;AACD,aAAO,KAAKH,aAAZ;AACH;;AACD,QAAIJ,OAAJ,EAAa;AACTjB,MAAAA,SAAS,CAACyB,SAAV,CAAoBC,IAApB,CAAyBf,YAAY,CAACgB,QAAtC,EAAgD3B,SAAS,CAACM,aAAV,CAAwBa,KAAxE,EAA+ER,YAAY,CAACc,SAA5F;AACH;;AACD,SAAKxB,MAAL,IAAea,QAAf;AACH;;AACDc,EAAAA,SAAS,CAACC,QAAD,EAAW;AAChB,UAAM7B,SAAS,GAAG,KAAKA,SAAvB;AAAA,UAAkCS,OAAO,GAAGT,SAAS,CAACU,aAAtD;AAAA,UAAqES,KAAK,GAAGnB,SAAS,CAACM,aAAV,CAAwBa,KAArG;AAAA,UAA4GW,MAAM,GAAG,CAACD,QAAQ,EAAEvB,aAAV,IAA2BG,OAAO,CAACH,aAApC,EAAmDwB,MAAxK;AACA,WAASX,KAAK,CAACY,QAAN,IAAkBZ,KAAK,CAACa,MAAxB,IAAkC,CAAC,CAACb,KAAK,CAACC,QAA1C,IAAsDxB,SAAS,CAAC,OAAD,EAAUkC,MAAM,CAACG,OAAP,CAAeC,IAAzB,CAAhE,IACHf,KAAK,CAACa,MAAN,IAAgB,CAAC,CAACb,KAAK,CAACC,QAAxB,IAAoCxB,SAAS,CAAC,OAAD,EAAUkC,MAAM,CAACK,OAAP,CAAeD,IAAzB,CADlD;AAEH;;AACDE,EAAAA,eAAe,CAAC3B,OAAD,EAAsB;AACjC,QAAI,CAACA,OAAO,CAACI,KAAb,EAAoB;AAChBJ,MAAAA,OAAO,CAACI,KAAR,GAAgB,IAAIhB,KAAJ,EAAhB;AACH;;AAHgC,sCAATwC,OAAS;AAATA,MAAAA,OAAS;AAAA;;AAIjC,SAAK,MAAMC,MAAX,IAAqBD,OAArB,EAA8B;AAC1B5B,MAAAA,OAAO,CAACI,KAAR,CAAc0B,IAAd,CAAmBD,MAAM,EAAEzB,KAA3B;AACH;AACJ;;AACD2B,EAAAA,KAAK,GAAG,CACP;;AAvDkD","sourcesContent":["import { ExternalInteractorBase, isInArray, } from \"tsparticles-engine\";\nimport { Trail } from \"./Options/Classes/Trail\";\nexport class TrailMaker extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._delay = 0;\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(delta) {\n        const container = this.container, { interactivity } = container;\n        if (!container.retina.reduceFactor) {\n            return;\n        }\n        const options = container.actualOptions, trailOptions = options.interactivity.modes.trail;\n        if (!trailOptions) {\n            return;\n        }\n        const optDelay = (trailOptions.delay * 1000) / this.container.retina.reduceFactor;\n        if (this._delay < optDelay) {\n            this._delay += delta.value;\n        }\n        if (this._delay < optDelay) {\n            return;\n        }\n        const canEmit = !(trailOptions.pauseOnStop &&\n            (interactivity.mouse.position === this._lastPosition ||\n                (interactivity.mouse.position?.x === this._lastPosition?.x &&\n                    interactivity.mouse.position?.y === this._lastPosition?.y)));\n        const mousePos = container.interactivity.mouse.position;\n        if (mousePos) {\n            this._lastPosition = { ...mousePos };\n        }\n        else {\n            delete this._lastPosition;\n        }\n        if (canEmit) {\n            container.particles.push(trailOptions.quantity, container.interactivity.mouse, trailOptions.particles);\n        }\n        this._delay -= optDelay;\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        return ((mouse.clicking && mouse.inside && !!mouse.position && isInArray(\"trail\", events.onClick.mode)) ||\n            (mouse.inside && !!mouse.position && isInArray(\"trail\", events.onHover.mode)));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.trail) {\n            options.trail = new Trail();\n        }\n        for (const source of sources) {\n            options.trail.load(source?.trail);\n        }\n    }\n    reset() {\n    }\n}\n"]},"metadata":{},"sourceType":"module"}