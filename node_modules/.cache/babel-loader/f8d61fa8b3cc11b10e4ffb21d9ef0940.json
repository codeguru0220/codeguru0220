{"ast":null,"code":"import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\n\nasync function getDataFromUrl(data) {\n  const url = itemFromSingleOrMultiple(data.url, data.index);\n\n  if (!url) {\n    return data.fallback;\n  }\n\n  const response = await fetch(url);\n\n  if (response.ok) {\n    return response.json();\n  }\n\n  getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n  return data.fallback;\n}\n\nfunction isParamsEmpty(params) {\n  return !params.id && !params.element && !params.url && !params.options;\n}\n\nfunction isParams(obj) {\n  return !isParamsEmpty(obj);\n}\n\nexport class Engine {\n  constructor() {\n    this._configs = new Map();\n    this._domArray = [];\n    this._eventDispatcher = new EventDispatcher();\n    this._initialized = false;\n    this.plugins = new Plugins(this);\n  }\n\n  get configs() {\n    const res = {};\n\n    for (const [name, config] of this._configs) {\n      res[name] = config;\n    }\n\n    return res;\n  }\n\n  get version() {\n    return \"2.12.0\";\n  }\n\n  addConfig(nameOrConfig, config) {\n    if (isString(nameOrConfig)) {\n      if (config) {\n        config.name = nameOrConfig;\n\n        this._configs.set(nameOrConfig, config);\n      }\n    } else {\n      this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n    }\n  }\n\n  addEventListener(type, listener) {\n    this._eventDispatcher.addEventListener(type, listener);\n  }\n\n  async addInteractor(name, interactorInitializer) {\n    let refresh = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    this.plugins.addInteractor(name, interactorInitializer);\n    await this.refresh(refresh);\n  }\n\n  async addMover(name, moverInitializer) {\n    let refresh = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    this.plugins.addParticleMover(name, moverInitializer);\n    await this.refresh(refresh);\n  }\n\n  async addParticleUpdater(name, updaterInitializer) {\n    let refresh = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    this.plugins.addParticleUpdater(name, updaterInitializer);\n    await this.refresh(refresh);\n  }\n\n  async addPathGenerator(name, generator) {\n    let refresh = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    this.plugins.addPathGenerator(name, generator);\n    await this.refresh(refresh);\n  }\n\n  async addPlugin(plugin) {\n    let refresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.plugins.addPlugin(plugin);\n    await this.refresh(refresh);\n  }\n\n  async addPreset(preset, options) {\n    let override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let refresh = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    this.plugins.addPreset(preset, options, override);\n    await this.refresh(refresh);\n  }\n\n  async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh) {\n    let refresh = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n    let customDrawer;\n    let realRefresh = refresh,\n        realInit,\n        realAfterEffect,\n        realDestroy;\n\n    if (isBoolean(initOrRefresh)) {\n      realRefresh = initOrRefresh;\n      realInit = undefined;\n    } else {\n      realInit = initOrRefresh;\n    }\n\n    if (isBoolean(afterEffectOrRefresh)) {\n      realRefresh = afterEffectOrRefresh;\n      realAfterEffect = undefined;\n    } else {\n      realAfterEffect = afterEffectOrRefresh;\n    }\n\n    if (isBoolean(destroyOrRefresh)) {\n      realRefresh = destroyOrRefresh;\n      realDestroy = undefined;\n    } else {\n      realDestroy = destroyOrRefresh;\n    }\n\n    if (isFunction(drawer)) {\n      customDrawer = {\n        afterEffect: realAfterEffect,\n        destroy: realDestroy,\n        draw: drawer,\n        init: realInit\n      };\n    } else {\n      customDrawer = drawer;\n    }\n\n    this.plugins.addShapeDrawer(shape, customDrawer);\n    await this.refresh(realRefresh);\n  }\n\n  dispatchEvent(type, args) {\n    this._eventDispatcher.dispatchEvent(type, args);\n  }\n\n  dom() {\n    return this._domArray;\n  }\n\n  domItem(index) {\n    const dom = this.dom(),\n          item = dom[index];\n\n    if (!item || item.destroyed) {\n      dom.splice(index, 1);\n      return;\n    }\n\n    return item;\n  }\n\n  init() {\n    if (this._initialized) {\n      return;\n    }\n\n    this._initialized = true;\n  }\n\n  async load(tagIdOrOptionsOrParams, options) {\n    return this.loadFromArray(tagIdOrOptionsOrParams, options);\n  }\n\n  async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n    let params;\n\n    if (!isParams(tagIdOrOptionsOrParams)) {\n      params = {};\n\n      if (isString(tagIdOrOptionsOrParams)) {\n        params.id = tagIdOrOptionsOrParams;\n      } else {\n        params.options = tagIdOrOptionsOrParams;\n      }\n\n      if (isNumber(optionsOrIndex)) {\n        params.index = optionsOrIndex;\n      } else {\n        params.options = optionsOrIndex ?? params.options;\n      }\n\n      params.index = index ?? params.index;\n    } else {\n      params = tagIdOrOptionsOrParams;\n    }\n\n    return this._loadParams(params);\n  }\n\n  async loadJSON(tagId, pathConfigJson, index) {\n    let url, id;\n\n    if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n      url = tagId;\n    } else {\n      id = tagId;\n      url = pathConfigJson;\n    }\n\n    return this._loadParams({\n      id: id,\n      url,\n      index\n    });\n  }\n\n  async refresh() {\n    let refresh = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    if (!refresh) {\n      return;\n    }\n\n    this.dom().forEach(t => t.refresh());\n  }\n\n  removeEventListener(type, listener) {\n    this._eventDispatcher.removeEventListener(type, listener);\n  }\n\n  async set(id, element, options, index) {\n    const params = {\n      index\n    };\n\n    if (isString(id)) {\n      params.id = id;\n    } else {\n      params.element = id;\n    }\n\n    if (element instanceof HTMLElement) {\n      params.element = element;\n    } else {\n      params.options = element;\n    }\n\n    if (isNumber(options)) {\n      params.index = options;\n    } else {\n      params.options = options ?? params.options;\n    }\n\n    return this._loadParams(params);\n  }\n\n  async setJSON(id, element, pathConfigJson, index) {\n    const params = {};\n\n    if (id instanceof HTMLElement) {\n      params.element = id;\n      params.url = element;\n      params.index = pathConfigJson;\n    } else {\n      params.id = id;\n      params.element = element;\n      params.url = pathConfigJson;\n      params.index = index;\n    }\n\n    return this._loadParams(params);\n  }\n\n  setOnClickHandler(callback) {\n    const dom = this.dom();\n\n    if (!dom.length) {\n      throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n    }\n\n    for (const domItem of dom) {\n      domItem.addClickHandler(callback);\n    }\n  }\n\n  async _loadParams(params) {\n    const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`,\n          {\n      index,\n      url\n    } = params,\n          options = url ? await getDataFromUrl({\n      fallback: params.options,\n      url,\n      index\n    }) : params.options;\n    let domContainer = params.element ?? document.getElementById(id);\n\n    if (!domContainer) {\n      domContainer = document.createElement(\"div\");\n      domContainer.id = id;\n      document.body.append(domContainer);\n    }\n\n    const currentOptions = itemFromSingleOrMultiple(options, index),\n          dom = this.dom(),\n          oldIndex = dom.findIndex(v => v.id === id);\n\n    if (oldIndex >= 0) {\n      const old = this.domItem(oldIndex);\n\n      if (old && !old.destroyed) {\n        old.destroy();\n        dom.splice(oldIndex, 1);\n      }\n    }\n\n    let canvasEl;\n\n    if (domContainer.tagName.toLowerCase() === \"canvas\") {\n      canvasEl = domContainer;\n      canvasEl.dataset[generatedAttribute] = \"false\";\n    } else {\n      const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n\n      if (existingCanvases.length) {\n        canvasEl = existingCanvases[0];\n        canvasEl.dataset[generatedAttribute] = \"false\";\n      } else {\n        canvasEl = document.createElement(\"canvas\");\n        canvasEl.dataset[generatedAttribute] = \"true\";\n        domContainer.appendChild(canvasEl);\n      }\n    }\n\n    if (!canvasEl.style.width) {\n      canvasEl.style.width = \"100%\";\n    }\n\n    if (!canvasEl.style.height) {\n      canvasEl.style.height = \"100%\";\n    }\n\n    const newItem = new Container(this, id, currentOptions);\n\n    if (oldIndex >= 0) {\n      dom.splice(oldIndex, 0, newItem);\n    } else {\n      dom.push(newItem);\n    }\n\n    newItem.canvas.loadCanvas(canvasEl);\n    await newItem.start();\n    return newItem;\n  }\n\n}","map":{"version":3,"sources":["D:/mitsukimiyagi-portfolio/node_modules/tsparticles-engine/esm/Core/Engine.js"],"names":["errorPrefix","generatedAttribute","getLogger","isBoolean","isFunction","isNumber","isString","itemFromSingleOrMultiple","Container","EventDispatcher","Plugins","getRandom","getDataFromUrl","data","url","index","fallback","response","fetch","ok","json","error","status","isParamsEmpty","params","id","element","options","isParams","obj","Engine","constructor","_configs","Map","_domArray","_eventDispatcher","_initialized","plugins","configs","res","name","config","version","addConfig","nameOrConfig","set","addEventListener","type","listener","addInteractor","interactorInitializer","refresh","addMover","moverInitializer","addParticleMover","addParticleUpdater","updaterInitializer","addPathGenerator","generator","addPlugin","plugin","addPreset","preset","override","addShape","shape","drawer","initOrRefresh","afterEffectOrRefresh","destroyOrRefresh","customDrawer","realRefresh","realInit","realAfterEffect","realDestroy","undefined","afterEffect","destroy","draw","init","addShapeDrawer","dispatchEvent","args","dom","domItem","item","destroyed","splice","load","tagIdOrOptionsOrParams","loadFromArray","optionsOrIndex","_loadParams","loadJSON","tagId","pathConfigJson","forEach","t","removeEventListener","HTMLElement","setJSON","setOnClickHandler","callback","length","Error","addClickHandler","Math","floor","domContainer","document","getElementById","createElement","body","append","currentOptions","oldIndex","findIndex","v","old","canvasEl","tagName","toLowerCase","dataset","existingCanvases","getElementsByTagName","appendChild","style","width","height","newItem","push","canvas","loadCanvas","start"],"mappings":"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","sourcesContent":["import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}