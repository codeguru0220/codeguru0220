{"ast":null,"code":"var _jsxFileName = \"D:\\\\mitsukimiyagi-portfolio\\\\src\\\\components\\\\ScrollToTop\\\\ScrollToTop.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport './ScrollToTop.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ScrollToTop = () => {\n  _s();\n\n  const [backToTopButtom, setBackTopButton] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 100) {\n        setBackTopButton(true);\n      } else {\n        setBackTopButton(false);\n      }\n    });\n  }, []);\n\n  const scrollUp = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: backToTopButtom && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cm-up\",\n      onClick: scrollUp,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"cm-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-chevron-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ScrollToTop, \"lSp8WLPo0MWFCsVytE9bn+JXa7M=\");\n\n_c = ScrollToTop;\nexport default _c2 = /*#__PURE__*/React.memo(ScrollToTop);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ScrollToTop\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/mitsukimiyagi-portfolio/src/components/ScrollToTop/ScrollToTop.jsx"],"names":["React","useEffect","useState","ScrollToTop","backToTopButtom","setBackTopButton","window","addEventListener","scrollY","scrollUp","scrollTo","top","behavior","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAEA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,eAAD,EAAkBC,gBAAlB,IAAqCH,QAAQ,CAAC,KAAD,CAAnD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACpC,UAAID,MAAM,CAACE,OAAP,GAAiB,GAArB,EAA0B;AACtBH,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,OAFD,MAEO;AACHA,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH;AACJ,KAND;AAOH,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMI,QAAQ,GAAG,MAAM;AACnBH,IAAAA,MAAM,CAACI,QAAP,CAAgB;AACZC,MAAAA,GAAG,EAAE,CADO;AAEZC,MAAAA,QAAQ,EAAE;AAFE,KAAhB;AAIH,GALD;;AAOA,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACER,eAAe,iBACZ;AAAQ,MAAA,SAAS,EAAC,OAAlB;AAA0B,MAAA,OAAO,EAAEK,QAAnC;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA,+BACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFL;AAAA;AAAA;AAAA;AAAA,UAAP;AASH,CA7BD;;GAAMN,W;;KAAAA,W;AA+BN,kCAAeH,KAAK,CAACa,IAAN,CAAWV,WAAX,CAAf","sourcesContent":["import React from 'react';\r\nimport {useEffect, useState} from 'react';\r\n\r\nimport './ScrollToTop.css';\r\n\r\nconst ScrollToTop = () => {\r\n    const [backToTopButtom, setBackTopButton]= useState(false);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if (window.scrollY > 100) {\r\n                setBackTopButton(true);\r\n            } else {\r\n                setBackTopButton(false);\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const scrollUp = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        })\r\n    }\r\n\r\n    return <div className='App'>\r\n            {backToTopButtom && (\r\n                <button className='cm-up' onClick={scrollUp}> \r\n                    <span className=\"cm-icon\">\r\n                        <i className=\"fas fa-chevron-up\"></i>\r\n                    </span>\r\n                </button>\r\n            )}\r\n    </div>\r\n};\r\n\r\nexport default React.memo(ScrollToTop);"]},"metadata":{},"sourceType":"module"}