{"ast":null,"code":"import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine) {\n  let refresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  await engine.addShape(\"polygon\", new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine) {\n  let refresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  await engine.addShape(\"triangle\", new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine) {\n  let refresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  await loadGenericPolygonShape(engine, refresh);\n  await loadTriangleShape(engine, refresh);\n}","map":{"version":3,"sources":["D:/mitsukimiyagi-portfolio/node_modules/tsparticles-shape-polygon/esm/index.js"],"names":["PolygonDrawer","TriangleDrawer","loadGenericPolygonShape","engine","refresh","addShape","loadTriangleShape","loadPolygonShape"],"mappings":"AAAA,SAASA,aAAT,QAA8B,iBAA9B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAO,eAAeC,uBAAf,CAAuCC,MAAvC,EAA+D;AAAA,MAAhBC,OAAgB,uEAAN,IAAM;AAClE,QAAMD,MAAM,CAACE,QAAP,CAAgB,SAAhB,EAA2B,IAAIL,aAAJ,EAA3B,EAAgDI,OAAhD,CAAN;AACH;AACD,OAAO,eAAeE,iBAAf,CAAiCH,MAAjC,EAAyD;AAAA,MAAhBC,OAAgB,uEAAN,IAAM;AAC5D,QAAMD,MAAM,CAACE,QAAP,CAAgB,UAAhB,EAA4B,IAAIJ,cAAJ,EAA5B,EAAkDG,OAAlD,CAAN;AACH;AACD,OAAO,eAAeG,gBAAf,CAAgCJ,MAAhC,EAAwD;AAAA,MAAhBC,OAAgB,uEAAN,IAAM;AAC3D,QAAMF,uBAAuB,CAACC,MAAD,EAASC,OAAT,CAA7B;AACA,QAAME,iBAAiB,CAACH,MAAD,EAASC,OAAT,CAAvB;AACH","sourcesContent":["import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    await engine.addShape(\"polygon\", new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    await engine.addShape(\"triangle\", new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n"]},"metadata":{},"sourceType":"module"}