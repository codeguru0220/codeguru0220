{"ast":null,"code":"import { initParticle, updateRoll } from \"./Utils\";\nimport { Roll } from \"./Options/Classes/Roll\";\nexport class RollUpdater {\n  getTransformValues(particle) {\n    const roll = particle.roll?.enable && particle.roll,\n          rollHorizontal = roll && roll.horizontal,\n          rollVertical = roll && roll.vertical;\n    return {\n      a: rollHorizontal ? Math.cos(roll.angle) : undefined,\n      d: rollVertical ? Math.sin(roll.angle) : undefined\n    };\n  }\n\n  init(particle) {\n    initParticle(particle);\n  }\n\n  isEnabled(particle) {\n    const roll = particle.options.roll;\n    return !particle.destroyed && !particle.spawning && !!roll?.enable;\n  }\n\n  loadOptions(options) {\n    if (!options.roll) {\n      options.roll = new Roll();\n    }\n\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n\n    for (const source of sources) {\n      options.roll.load(source?.roll);\n    }\n  }\n\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n\n    updateRoll(particle, delta);\n  }\n\n}","map":{"version":3,"sources":["D:/mitsukimiyagi-portfolio/node_modules/tsparticles-updater-roll/esm/RollUpdater.js"],"names":["initParticle","updateRoll","Roll","RollUpdater","getTransformValues","particle","roll","enable","rollHorizontal","horizontal","rollVertical","vertical","a","Math","cos","angle","undefined","d","sin","init","isEnabled","options","destroyed","spawning","loadOptions","sources","source","load","update","delta"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,SAAzC;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,kBAAkB,CAACC,QAAD,EAAW;AACzB,UAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAT,EAAeC,MAAf,IAAyBF,QAAQ,CAACC,IAA/C;AAAA,UAAqDE,cAAc,GAAGF,IAAI,IAAIA,IAAI,CAACG,UAAnF;AAAA,UAA+FC,YAAY,GAAGJ,IAAI,IAAIA,IAAI,CAACK,QAA3H;AACA,WAAO;AACHC,MAAAA,CAAC,EAAEJ,cAAc,GAAGK,IAAI,CAACC,GAAL,CAASR,IAAI,CAACS,KAAd,CAAH,GAA0BC,SADxC;AAEHC,MAAAA,CAAC,EAAEP,YAAY,GAAGG,IAAI,CAACK,GAAL,CAASZ,IAAI,CAACS,KAAd,CAAH,GAA0BC;AAFtC,KAAP;AAIH;;AACDG,EAAAA,IAAI,CAACd,QAAD,EAAW;AACXL,IAAAA,YAAY,CAACK,QAAD,CAAZ;AACH;;AACDe,EAAAA,SAAS,CAACf,QAAD,EAAW;AAChB,UAAMC,IAAI,GAAGD,QAAQ,CAACgB,OAAT,CAAiBf,IAA9B;AACA,WAAO,CAACD,QAAQ,CAACiB,SAAV,IAAuB,CAACjB,QAAQ,CAACkB,QAAjC,IAA6C,CAAC,CAACjB,IAAI,EAAEC,MAA5D;AACH;;AACDiB,EAAAA,WAAW,CAACH,OAAD,EAAsB;AAC7B,QAAI,CAACA,OAAO,CAACf,IAAb,EAAmB;AACfe,MAAAA,OAAO,CAACf,IAAR,GAAe,IAAIJ,IAAJ,EAAf;AACH;;AAH4B,sCAATuB,OAAS;AAATA,MAAAA,OAAS;AAAA;;AAI7B,SAAK,MAAMC,MAAX,IAAqBD,OAArB,EAA8B;AAC1BJ,MAAAA,OAAO,CAACf,IAAR,CAAaqB,IAAb,CAAkBD,MAAM,EAAEpB,IAA1B;AACH;AACJ;;AACDsB,EAAAA,MAAM,CAACvB,QAAD,EAAWwB,KAAX,EAAkB;AACpB,QAAI,CAAC,KAAKT,SAAL,CAAef,QAAf,CAAL,EAA+B;AAC3B;AACH;;AACDJ,IAAAA,UAAU,CAACI,QAAD,EAAWwB,KAAX,CAAV;AACH;;AA5BoB","sourcesContent":["import { initParticle, updateRoll } from \"./Utils\";\nimport { Roll } from \"./Options/Classes/Roll\";\nexport class RollUpdater {\n    getTransformValues(particle) {\n        const roll = particle.roll?.enable && particle.roll, rollHorizontal = roll && roll.horizontal, rollVertical = roll && roll.vertical;\n        return {\n            a: rollHorizontal ? Math.cos(roll.angle) : undefined,\n            d: rollVertical ? Math.sin(roll.angle) : undefined,\n        };\n    }\n    init(particle) {\n        initParticle(particle);\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && !!roll?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.roll) {\n            options.roll = new Roll();\n        }\n        for (const source of sources) {\n            options.roll.load(source?.roll);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}