{"ast":null,"code":"import { __assign, __spreadArray } from \"tslib\";\nimport { IntlMessageFormat } from 'intl-messageformat';\nimport memoize, { strategies } from '@formatjs/fast-memoize';\nimport { UnsupportedFormatterError } from './error';\nexport function filterProps(props, allowlist, defaults) {\n  if (defaults === void 0) {\n    defaults = {};\n  }\n\n  return allowlist.reduce(function (filtered, name) {\n    if (name in props) {\n      filtered[name] = props[name];\n    } else if (name in defaults) {\n      filtered[name] = defaults[name];\n    }\n\n    return filtered;\n  }, {});\n}\n\nvar defaultErrorHandler = function (error) {\n  // @ts-ignore just so we don't need to declare dep on @types/node\n  if (process.env.NODE_ENV !== 'production') {\n    console.error(error);\n  }\n};\n\nvar defaultWarnHandler = function (warning) {\n  // @ts-ignore just so we don't need to declare dep on @types/node\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(warning);\n  }\n};\n\nexport var DEFAULT_INTL_CONFIG = {\n  formats: {},\n  messages: {},\n  timeZone: undefined,\n  defaultLocale: 'en',\n  defaultFormats: {},\n  fallbackOnEmptyString: true,\n  onError: defaultErrorHandler,\n  onWarn: defaultWarnHandler\n};\nexport function createIntlCache() {\n  return {\n    dateTime: {},\n    number: {},\n    message: {},\n    relativeTime: {},\n    pluralRules: {},\n    list: {},\n    displayNames: {}\n  };\n}\n\nfunction createFastMemoizeCache(store) {\n  return {\n    create: function () {\n      return {\n        get: function (key) {\n          return store[key];\n        },\n        set: function (key, value) {\n          store[key] = value;\n        }\n      };\n    }\n  };\n}\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\n\n\nexport function createFormatters(cache) {\n  if (cache === void 0) {\n    cache = createIntlCache();\n  }\n\n  var RelativeTimeFormat = Intl.RelativeTimeFormat;\n  var ListFormat = Intl.ListFormat;\n  var DisplayNames = Intl.DisplayNames;\n  var getDateTimeFormat = memoize(function () {\n    var _a;\n\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\n  }, {\n    cache: createFastMemoizeCache(cache.dateTime),\n    strategy: strategies.variadic\n  });\n  var getNumberFormat = memoize(function () {\n    var _a;\n\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\n  }, {\n    cache: createFastMemoizeCache(cache.number),\n    strategy: strategies.variadic\n  });\n  var getPluralRules = memoize(function () {\n    var _a;\n\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArray([void 0], args, false)))();\n  }, {\n    cache: createFastMemoizeCache(cache.pluralRules),\n    strategy: strategies.variadic\n  });\n  return {\n    getDateTimeFormat: getDateTimeFormat,\n    getNumberFormat: getNumberFormat,\n    getMessageFormat: memoize(function (message, locales, overrideFormats, opts) {\n      return new IntlMessageFormat(message, locales, overrideFormats, __assign({\n        formatters: {\n          getNumberFormat: getNumberFormat,\n          getDateTimeFormat: getDateTimeFormat,\n          getPluralRules: getPluralRules\n        }\n      }, opts || {}));\n    }, {\n      cache: createFastMemoizeCache(cache.message),\n      strategy: strategies.variadic\n    }),\n    getRelativeTimeFormat: memoize(function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return new (RelativeTimeFormat.bind.apply(RelativeTimeFormat, __spreadArray([void 0], args, false)))();\n    }, {\n      cache: createFastMemoizeCache(cache.relativeTime),\n      strategy: strategies.variadic\n    }),\n    getPluralRules: getPluralRules,\n    getListFormat: memoize(function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return new (ListFormat.bind.apply(ListFormat, __spreadArray([void 0], args, false)))();\n    }, {\n      cache: createFastMemoizeCache(cache.list),\n      strategy: strategies.variadic\n    }),\n    getDisplayNames: memoize(function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return new (DisplayNames.bind.apply(DisplayNames, __spreadArray([void 0], args, false)))();\n    }, {\n      cache: createFastMemoizeCache(cache.displayNames),\n      strategy: strategies.variadic\n    })\n  };\n}\nexport function getNamedFormat(formats, type, name, onError) {\n  var formatType = formats && formats[type];\n  var format;\n\n  if (formatType) {\n    format = formatType[name];\n  }\n\n  if (format) {\n    return format;\n  }\n\n  onError(new UnsupportedFormatterError(\"No \".concat(type, \" format named: \").concat(name)));\n}","map":{"version":3,"sources":["D:/mitsukimiyagi-portfolio/node_modules/@formatjs/intl/lib/src/utils.js"],"names":["__assign","__spreadArray","IntlMessageFormat","memoize","strategies","UnsupportedFormatterError","filterProps","props","allowlist","defaults","reduce","filtered","name","defaultErrorHandler","error","process","env","NODE_ENV","console","defaultWarnHandler","warning","warn","DEFAULT_INTL_CONFIG","formats","messages","timeZone","undefined","defaultLocale","defaultFormats","fallbackOnEmptyString","onError","onWarn","createIntlCache","dateTime","number","message","relativeTime","pluralRules","list","displayNames","createFastMemoizeCache","store","create","get","key","set","value","createFormatters","cache","RelativeTimeFormat","Intl","ListFormat","DisplayNames","getDateTimeFormat","_a","args","_i","arguments","length","DateTimeFormat","bind","apply","strategy","variadic","getNumberFormat","NumberFormat","getPluralRules","PluralRules","getMessageFormat","locales","overrideFormats","opts","formatters","getRelativeTimeFormat","getListFormat","getDisplayNames","getNamedFormat","type","formatType","format","concat"],"mappings":"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","sourcesContent":["import { __assign, __spreadArray } from \"tslib\";\nimport { IntlMessageFormat } from 'intl-messageformat';\nimport memoize, { strategies } from '@formatjs/fast-memoize';\nimport { UnsupportedFormatterError } from './error';\nexport function filterProps(props, allowlist, defaults) {\n    if (defaults === void 0) { defaults = {}; }\n    return allowlist.reduce(function (filtered, name) {\n        if (name in props) {\n            filtered[name] = props[name];\n        }\n        else if (name in defaults) {\n            filtered[name] = defaults[name];\n        }\n        return filtered;\n    }, {});\n}\nvar defaultErrorHandler = function (error) {\n    // @ts-ignore just so we don't need to declare dep on @types/node\n    if (process.env.NODE_ENV !== 'production') {\n        console.error(error);\n    }\n};\nvar defaultWarnHandler = function (warning) {\n    // @ts-ignore just so we don't need to declare dep on @types/node\n    if (process.env.NODE_ENV !== 'production') {\n        console.warn(warning);\n    }\n};\nexport var DEFAULT_INTL_CONFIG = {\n    formats: {},\n    messages: {},\n    timeZone: undefined,\n    defaultLocale: 'en',\n    defaultFormats: {},\n    fallbackOnEmptyString: true,\n    onError: defaultErrorHandler,\n    onWarn: defaultWarnHandler,\n};\nexport function createIntlCache() {\n    return {\n        dateTime: {},\n        number: {},\n        message: {},\n        relativeTime: {},\n        pluralRules: {},\n        list: {},\n        displayNames: {},\n    };\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\nexport function createFormatters(cache) {\n    if (cache === void 0) { cache = createIntlCache(); }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    var ListFormat = Intl.ListFormat;\n    var DisplayNames = Intl.DisplayNames;\n    var getDateTimeFormat = memoize(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\n    }, {\n        cache: createFastMemoizeCache(cache.dateTime),\n        strategy: strategies.variadic,\n    });\n    var getNumberFormat = memoize(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\n    }, {\n        cache: createFastMemoizeCache(cache.number),\n        strategy: strategies.variadic,\n    });\n    var getPluralRules = memoize(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArray([void 0], args, false)))();\n    }, {\n        cache: createFastMemoizeCache(cache.pluralRules),\n        strategy: strategies.variadic,\n    });\n    return {\n        getDateTimeFormat: getDateTimeFormat,\n        getNumberFormat: getNumberFormat,\n        getMessageFormat: memoize(function (message, locales, overrideFormats, opts) {\n            return new IntlMessageFormat(message, locales, overrideFormats, __assign({ formatters: {\n                    getNumberFormat: getNumberFormat,\n                    getDateTimeFormat: getDateTimeFormat,\n                    getPluralRules: getPluralRules,\n                } }, (opts || {})));\n        }, {\n            cache: createFastMemoizeCache(cache.message),\n            strategy: strategies.variadic,\n        }),\n        getRelativeTimeFormat: memoize(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (RelativeTimeFormat.bind.apply(RelativeTimeFormat, __spreadArray([void 0], args, false)))();\n        }, {\n            cache: createFastMemoizeCache(cache.relativeTime),\n            strategy: strategies.variadic,\n        }),\n        getPluralRules: getPluralRules,\n        getListFormat: memoize(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (ListFormat.bind.apply(ListFormat, __spreadArray([void 0], args, false)))();\n        }, {\n            cache: createFastMemoizeCache(cache.list),\n            strategy: strategies.variadic,\n        }),\n        getDisplayNames: memoize(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (DisplayNames.bind.apply(DisplayNames, __spreadArray([void 0], args, false)))();\n        }, {\n            cache: createFastMemoizeCache(cache.displayNames),\n            strategy: strategies.variadic,\n        }),\n    };\n}\nexport function getNamedFormat(formats, type, name, onError) {\n    var formatType = formats && formats[type];\n    var format;\n    if (formatType) {\n        format = formatType[name];\n    }\n    if (format) {\n        return format;\n    }\n    onError(new UnsupportedFormatterError(\"No \".concat(type, \" format named: \").concat(name)));\n}\n"]},"metadata":{},"sourceType":"module"}