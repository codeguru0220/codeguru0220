{"ast":null,"code":"export class EventDispatcher {\n  constructor() {\n    this._listeners = new Map();\n  }\n\n  addEventListener(type, listener) {\n    this.removeEventListener(type, listener);\n\n    let arr = this._listeners.get(type);\n\n    if (!arr) {\n      arr = [];\n\n      this._listeners.set(type, arr);\n    }\n\n    arr.push(listener);\n  }\n\n  dispatchEvent(type, args) {\n    const listeners = this._listeners.get(type);\n\n    listeners && listeners.forEach(handler => handler(args));\n  }\n\n  hasEventListener(type) {\n    return !!this._listeners.get(type);\n  }\n\n  removeAllEventListeners(type) {\n    if (!type) {\n      this._listeners = new Map();\n    } else {\n      this._listeners.delete(type);\n    }\n  }\n\n  removeEventListener(type, listener) {\n    const arr = this._listeners.get(type);\n\n    if (!arr) {\n      return;\n    }\n\n    const length = arr.length,\n          idx = arr.indexOf(listener);\n\n    if (idx < 0) {\n      return;\n    }\n\n    if (length === 1) {\n      this._listeners.delete(type);\n    } else {\n      arr.splice(idx, 1);\n    }\n  }\n\n}","map":{"version":3,"sources":["D:/mitsukimiyagi-portfolio/node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js"],"names":["EventDispatcher","constructor","_listeners","Map","addEventListener","type","listener","removeEventListener","arr","get","set","push","dispatchEvent","args","listeners","forEach","handler","hasEventListener","removeAllEventListeners","delete","length","idx","indexOf","splice"],"mappings":"AAAA,OAAO,MAAMA,eAAN,CAAsB;AACzBC,EAAAA,WAAW,GAAG;AACV,SAAKC,UAAL,GAAkB,IAAIC,GAAJ,EAAlB;AACH;;AACDC,EAAAA,gBAAgB,CAACC,IAAD,EAAOC,QAAP,EAAiB;AAC7B,SAAKC,mBAAL,CAAyBF,IAAzB,EAA+BC,QAA/B;;AACA,QAAIE,GAAG,GAAG,KAAKN,UAAL,CAAgBO,GAAhB,CAAoBJ,IAApB,CAAV;;AACA,QAAI,CAACG,GAAL,EAAU;AACNA,MAAAA,GAAG,GAAG,EAAN;;AACA,WAAKN,UAAL,CAAgBQ,GAAhB,CAAoBL,IAApB,EAA0BG,GAA1B;AACH;;AACDA,IAAAA,GAAG,CAACG,IAAJ,CAASL,QAAT;AACH;;AACDM,EAAAA,aAAa,CAACP,IAAD,EAAOQ,IAAP,EAAa;AACtB,UAAMC,SAAS,GAAG,KAAKZ,UAAL,CAAgBO,GAAhB,CAAoBJ,IAApB,CAAlB;;AACAS,IAAAA,SAAS,IAAIA,SAAS,CAACC,OAAV,CAAmBC,OAAD,IAAaA,OAAO,CAACH,IAAD,CAAtC,CAAb;AACH;;AACDI,EAAAA,gBAAgB,CAACZ,IAAD,EAAO;AACnB,WAAO,CAAC,CAAC,KAAKH,UAAL,CAAgBO,GAAhB,CAAoBJ,IAApB,CAAT;AACH;;AACDa,EAAAA,uBAAuB,CAACb,IAAD,EAAO;AAC1B,QAAI,CAACA,IAAL,EAAW;AACP,WAAKH,UAAL,GAAkB,IAAIC,GAAJ,EAAlB;AACH,KAFD,MAGK;AACD,WAAKD,UAAL,CAAgBiB,MAAhB,CAAuBd,IAAvB;AACH;AACJ;;AACDE,EAAAA,mBAAmB,CAACF,IAAD,EAAOC,QAAP,EAAiB;AAChC,UAAME,GAAG,GAAG,KAAKN,UAAL,CAAgBO,GAAhB,CAAoBJ,IAApB,CAAZ;;AACA,QAAI,CAACG,GAAL,EAAU;AACN;AACH;;AACD,UAAMY,MAAM,GAAGZ,GAAG,CAACY,MAAnB;AAAA,UAA2BC,GAAG,GAAGb,GAAG,CAACc,OAAJ,CAAYhB,QAAZ,CAAjC;;AACA,QAAIe,GAAG,GAAG,CAAV,EAAa;AACT;AACH;;AACD,QAAID,MAAM,KAAK,CAAf,EAAkB;AACd,WAAKlB,UAAL,CAAgBiB,MAAhB,CAAuBd,IAAvB;AACH,KAFD,MAGK;AACDG,MAAAA,GAAG,CAACe,MAAJ,CAAWF,GAAX,EAAgB,CAAhB;AACH;AACJ;;AA3CwB","sourcesContent":["export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners && listeners.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}